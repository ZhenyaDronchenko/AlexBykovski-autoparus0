# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
imports:
    - { resource: ./packages/admin_blocks.yaml }
    - { resource: ./packages/forms.yaml }
    - { resource: ./packages/services/site_map.yaml }
    - { resource: ./packages/services/transformer.yaml }
    - { resource: ./packages/services/provider.yaml }
    - { resource: ./packages/services/sender.yaml }
    - { resource: ./packages/services/sms.yaml }
    - { resource: ./packages/services/helper.yaml }

parameters:
    locale: 'ru'
    upload_directory: '%kernel.project_dir%/public/images'
    upload_image_directory: '/images/'
    public_folder: '%kernel.project_dir%/public/'
    robots_txt_file_path: '%kernel.project_dir%/public/robots.txt'
    site_map_xml_file_path: '%kernel.project_dir%/public/stat_sitemap.xml'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        public: true
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    app.file_upload:
        class:  App\Upload\FileUpload
        arguments: ['@images_filesystem']
        public: true

    app.security.user_provider:
        class: App\Security\User\UserProvider
        arguments: ['@doctrine.orm.entity_manager']

    app.generator.password_generator:
        class:  App\Generator\PasswordGenerator
        arguments: []

    app.sender.forgot_password:
        class:  App\Sender\ForgotPasswordSender
        arguments: ["@app.generator.password_generator", '@doctrine.orm.entity_manager', '@mailer', '@router']
        public: true

    app.provider.form.client_car_provider:
        class:  App\Provider\Form\ClientCarProvider
        arguments: ['@doctrine.orm.entity_manager']
        public: true

    app.provider.form.spare_part_advert_provider:
        class:  App\Provider\Form\SparePartAdvertDataProvider
        arguments: ['@doctrine.orm.entity_manager']
        public: true

    app.provider.form.auto_advert_data_provider:
        class:  App\Provider\Form\AutoAdvertDataProvider
        arguments: ['@doctrine.orm.entity_manager']
        public: true

    app.provider.geo_location.geo_location_provider:
        class:  App\Provider\GeoLocation\GeoLocationProvider
        arguments: []
        public: true

    app.upload.client.user_office_upload:
        class:  App\Upload\Client\UserOfficeUploader
        arguments: ["@app.provider.geo_location.geo_location_provider", "@doctrine.orm.entity_manager"]
        public: true

    App\Twig\ImageUrlExtension:
        class: App\Twig\ImageUrlExtension
        arguments: ['%upload_image_directory%', '@doctrine.orm.entity_manager']
        tags:
            - { name: twig.extension }

    app.import_advert.import_checker:
        class:  App\ImportAdvert\ImportChecker
        arguments: ['@doctrine.orm.entity_manager']
        public: true

fos_user:
    db_driver: orm
    firewall_name: main
    user_class: App\Entity\User
    from_email:
        address: "hello@aquanote.com"
        sender_name: "AquaNote Postman"

gregwar_captcha:
    web_path: "%kernel.root_dir%/../public"
    invalid_message: "Неверный код с картинки. Попробуйте ещё раз."
    background_color: [255, 255, 255]

knp_gaufrette:
    adapters:
        local_storage:
            local:
                directory: '%upload_directory%'

    filesystems:
        bar:
            adapter:    local_storage
            alias:      images_filesystem